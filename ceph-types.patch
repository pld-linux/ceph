--- ceph-12.2.13/src/osd/PrimaryLogPG.cc.orig	2020-01-30 21:52:36.000000000 +0100
+++ ceph-12.2.13/src/osd/PrimaryLogPG.cc	2020-05-28 12:18:59.914600378 +0200
@@ -1582,7 +1582,7 @@
   if (limit != eversion_t() &&
       limit != pg_trim_to &&
       pg_log.get_log().approx_size() > target) {
-    size_t num_to_trim = std::min(pg_log.get_log().approx_size() - target,
+    size_t num_to_trim = std::min<uint64_t>(pg_log.get_log().approx_size() - target,
                              cct->_conf->osd_pg_log_trim_max);
     if (num_to_trim < cct->_conf->osd_pg_log_trim_min &&
         cct->_conf->osd_pg_log_trim_max >= cct->_conf->osd_pg_log_trim_min) {
@@ -1628,7 +1628,7 @@
       pg_log.get_log().approx_size() > target) {
     dout(10) << __func__ << " approx pg log length =  "
              << pg_log.get_log().approx_size() << dendl;
-    size_t num_to_trim = std::min(pg_log.get_log().approx_size() - target,
+    size_t num_to_trim = std::min<uint64_t>(pg_log.get_log().approx_size() - target,
 				  cct->_conf->osd_pg_log_trim_max);
     dout(10) << __func__ << " num_to_trim =  " << num_to_trim << dendl;
     if (num_to_trim < cct->_conf->osd_pg_log_trim_min &&
--- ceph-12.2.13/src/os/filestore/FileStore.cc.orig	2020-01-30 21:52:36.000000000 +0100
+++ ceph-12.2.13/src/os/filestore/FileStore.cc	2020-06-03 21:27:26.387210803 +0200
@@ -922,7 +922,7 @@
   }
 
 #if defined(__linux__)
-  if (basefs.f_type == BTRFS_SUPER_MAGIC &&
+  if (static_cast<uint32_t>(basefs.f_type) == BTRFS_SUPER_MAGIC &&
       !g_ceph_context->check_experimental_feature_enabled("btrfs")) {
     derr << __FUNC__ << ": deprecated btrfs support is not enabled" << dendl;
     goto close_fsid_fd;
@@ -1208,7 +1208,7 @@
   blk_size = st.f_bsize;
 
 #if defined(__linux__)
-  if (st.f_type == BTRFS_SUPER_MAGIC &&
+  if (static_cast<uint32_t>(st.f_type) == BTRFS_SUPER_MAGIC &&
       !g_ceph_context->check_experimental_feature_enabled("btrfs")) {
     derr <<__FUNC__ << ": deprecated btrfs support is not enabled" << dendl;
     return -EPERM;
--- ceph-13.2.10/src/mon/OSDMonitor.cc.orig	2020-04-23 18:32:31.000000000 +0200
+++ ceph-13.2.10/src/mon/OSDMonitor.cc	2021-09-20 20:03:13.672134022 +0200
@@ -820,7 +820,7 @@ OSDMonitor::update_pending_pgs(const OSD
 	     << " modified " << p->second.modified
 	     << " [" << p->second.start << "-" << p->second.end << ")"
 	     << dendl;
-    int n = std::min(max - pending_creatings.pgs.size(),
+    int n = std::min<uint64_t>(max - pending_creatings.pgs.size(),
 		p->second.end - p->second.start);
     ps_t first = p->second.start;
     ps_t end = first + n;
--- ceph-13.2.10/src/os/bluestore/BlueStore.cc.orig	2020-04-23 18:32:31.000000000 +0200
+++ ceph-13.2.10/src/os/bluestore/BlueStore.cc	2021-09-20 20:34:23.352005097 +0200
@@ -12614,7 +12614,7 @@ size_t BlueStoreRepairer::StoreSpaceTrac
     if (e.second == 0) {
       continue;
     }
-    size_t pos = max(e.first / granularity, prev_pos);
+    size_t pos = max<uint64_t>(e.first / granularity, prev_pos);
     size_t end_pos = 1 + (e.first + e.second - 1) / granularity;
     while (pos != npos && pos < end_pos)  {
         ceph_assert( collections_bfs[pos].element_count() ==
--- ceph-13.2.10/src/rgw/rgw_client_io_filters.h.orig	2020-04-23 18:32:31.000000000 +0200
+++ ceph-13.2.10/src/rgw/rgw_client_io_filters.h	2021-09-22 17:02:54.573378159 +0200
@@ -291,7 +291,7 @@ public:
       // extensions/trailing headers.
       char chunk_size[32];
       const auto chunk_size_len = snprintf(chunk_size, sizeof(chunk_size),
-                                           "%" PRIx64 "\r\n", len);
+                                           "%zx\r\n", len);
       size_t sent = 0;
 
       sent += DecoratedRestfulClient<T>::send_body(chunk_size, chunk_size_len);
--- ceph-13.2.10/src/rgw/rgw_rest_swift.cc.orig	2020-04-23 18:32:31.000000000 +0200
+++ ceph-13.2.10/src/rgw/rgw_rest_swift.cc	2021-09-22 17:04:01.473340779 +0200
@@ -726,7 +726,7 @@ static inline int handle_metadata_errors
   } else if (op_ret == -E2BIG) {
     const auto error_message = boost::str(
       boost::format("Too many metadata items; max %lld")
-        % s->cct->_conf->get_val<size_t>("rgw_max_attrs_num_in_req"));
+        % s->cct->_conf->get_val<Option::size_t>("rgw_max_attrs_num_in_req"));
     set_req_state_err(s, EINVAL, error_message);
     return -EINVAL;
   }
@@ -1781,7 +1781,7 @@ void RGWInfo_ObjStore_SWIFT::list_swift_
   formatter.dump_string("version", ceph_version);
 
   const size_t max_attr_name_len = \
-    g_conf->get_val<size_t>("rgw_max_attr_name_len");
+    g_conf->get_val<Option::size_t>("rgw_max_attr_name_len");
   if (max_attr_name_len) {
     const size_t meta_name_limit = \
       max_attr_name_len - strlen(RGW_ATTR_PREFIX RGW_AMZ_META_PREFIX);
@@ -1794,7 +1794,7 @@ void RGWInfo_ObjStore_SWIFT::list_swift_
   }
 
   const size_t meta_num_limit = \
-    g_conf->get_val<size_t>("rgw_max_attrs_num_in_req");
+    g_conf->get_val<Option::size_t>("rgw_max_attrs_num_in_req");
   if (meta_num_limit) {
     formatter.dump_int("max_meta_count", meta_num_limit);
   }
--- ceph-13.2.10/src/common/ceph_context.h.orig	2020-04-23 18:32:31.000000000 +0200
+++ ceph-13.2.10/src/common/ceph_context.h	2021-09-23 06:29:21.645156177 +0200
@@ -144,7 +144,11 @@ public:
   void do_command(std::string_view command, const cmdmap_t& cmdmap,
 		  std::string_view format, ceph::bufferlist *out);
 
+#ifdef __LP64__
   static constexpr std::size_t largest_singleton = sizeof(void*) * 72;
+#else
+  static constexpr std::size_t largest_singleton = sizeof(void*) * 96;
+#endif
 
   template<typename T, typename... Args>
   T& lookup_or_create_singleton_object(std::string_view name,
