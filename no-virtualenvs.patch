--- a/cmake/modules/AddCephTest.cmake
+++ b/cmake/modules/AddCephTest.cmake
@@ -70,17 +70,6 @@ function(add_tox_test name)
   endif()
   string(REPLACE ";" "," tox_envs "${tox_envs}")
   add_test(
-    NAME setup-venv-for-${name}
-    COMMAND ${CMAKE_SOURCE_DIR}/src/tools/setup-virtualenv.sh --python=${Python3_EXECUTABLE} ${venv_path}
-    WORKING_DIRECTORY ${tox_path})
-  set_tests_properties(setup-venv-for-${name} PROPERTIES
-    FIXTURES_SETUP venv-for-${name})
-  add_test(
-    NAME teardown-venv-for-${name}
-    COMMAND ${CMAKE_COMMAND} -E remove_directory ${venv_path})
-  set_tests_properties(teardown-venv-for-${name} PROPERTIES
-    FIXTURES_CLEANUP venv-for-${name})
-  add_test(
     NAME ${test_name}
     COMMAND ${CMAKE_SOURCE_DIR}/src/script/run_tox.sh
               --source-dir ${CMAKE_SOURCE_DIR}
@@ -88,8 +77,7 @@ function(add_tox_test name)
               --tox-path ${tox_path}
               --tox-envs ${tox_envs}
               --venv-path ${venv_path})
-  set_tests_properties(${test_name} PROPERTIES
-    FIXTURES_REQUIRED venv-for-${name})
+  set_tests_properties(${test_name} PROPERTIES)
   set_property(
     TEST ${test_name}
     PROPERTY ENVIRONMENT
diff --git a/src/ceph-volume/CMakeLists.txt b/src/ceph-volume/CMakeLists.txt
index 9166553dc73..9a6c87595b9 100644
--- a/src/ceph-volume/CMakeLists.txt
+++ b/src/ceph-volume/CMakeLists.txt
@@ -8,22 +8,6 @@ if(FREEBSD)
   add_subdirectory(plugin/zfs)
 endif()
 
-# Required for running ceph-volume inventory in a vstart environment
-set(CEPH_VOLUME_VIRTUALENV ${CEPH_BUILD_VIRTUALENV}/ceph-volume-virtualenv)
-
-add_custom_command(
-  OUTPUT ${CEPH_VOLUME_VIRTUALENV}/bin/python
-  COMMAND ${CMAKE_SOURCE_DIR}/src/tools/setup-virtualenv.sh --python=${Python3_EXECUTABLE} ${CEPH_VOLUME_VIRTUALENV}
-  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/src/ceph-volume
-  COMMENT "ceph-volume venv is being created")
-
-add_custom_command(
-  OUTPUT ${CEPH_VOLUME_VIRTUALENV}/bin/ceph-volume
-  DEPENDS ${CEPH_VOLUME_VIRTUALENV}/bin/python
-  COMMAND . ${CEPH_VOLUME_VIRTUALENV}/bin/activate && ${CEPH_VOLUME_VIRTUALENV}/bin/python setup.py develop && deactivate
-  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/src/ceph-volume
-  COMMENT "${CMAKE_SOURCE_DIR}/src/ceph-volume")
-
 add_custom_target(ceph-volume-venv-setup
   DEPENDS ${CEPH_VOLUME_VIRTUALENV}/bin/ceph-volume)
 
--- a/src/pybind/mgr/dashboard/frontend/CMakeLists.txt
+++ b/src/pybind/mgr/dashboard/frontend/CMakeLists.txt
@@ -5,17 +5,10 @@ function(add_npm_command)
   set(multi_kw COMMAND DEPENDS)
   cmake_parse_arguments(NC "${options}" "${single_kw}" "${multi_kw}" ${ARGN})
   string(REPLACE ";" " " command "${NC_COMMAND}")
-  if(NC_NODEENV)
-    string(REGEX REPLACE
-      "^(([^ ]+=[^ ]+ )*npm .*)$"
-      ". ${mgr-dashboard-nodeenv-dir}/bin/activate && \\1 && deactivate"
-      command ${command})
-  else()
     string(REGEX REPLACE
       "^([^ ]=[^ ] )*npm (.*)$"
       "\\1${NPM_EXECUTABLE} \\2"
       command ${command})
-  endif()
   string(REPLACE " " ";" command "${command}")
   add_custom_command(
     OUTPUT "${NC_OUTPUT}"
@@ -36,9 +29,7 @@ function(add_npm_options)
     list(GET opt 1 value)
     list(APPEND commands
       COMMAND
-      . ${NC_NODEENV_DIR}/bin/activate &&
-      npm config set ${key} ${value} --userconfig ${NC_NODEENV_DIR}/.npmrc &&
-      deactivate)
+      npm config set ${key} ${value} --userconfig ${NC_NODEENV_DIR}/.npmrc
   endforeach()
   add_custom_target(${NC_TARGET}
     ${commands}
@@ -60,11 +51,8 @@ else(WITH_SYSTEM_NPM)
     set(node_mirror_opt "--mirror=$ENV{NODE_MIRROR}")
   endif()
   add_custom_command(
-    OUTPUT "${mgr-dashboard-nodeenv-dir}/bin/npm"
-    COMMAND ${CMAKE_SOURCE_DIR}/src/tools/setup-virtualenv.sh --python=${MGR_PYTHON_EXECUTABLE} ${mgr-dashboard-nodeenv-dir}
-    COMMAND ${mgr-dashboard-nodeenv-dir}/bin/pip install nodeenv
-    COMMAND ${mgr-dashboard-nodeenv-dir}/bin/nodeenv --verbose ${node_mirror_opt} -p --node=12.18.2
-    COMMAND mkdir ${mgr-dashboard-nodeenv-dir}/.npm
+    OUTPUT "/bin/npm"
+    COMMAND /bin/nodeenv --verbose ${node_mirror_opt} -p --node=12.18.2
     WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
     COMMENT "dashboard nodeenv is being installed")
   if(DEFINED ENV{NPM_REGISTRY})
