--- ceph-17.2.7/src/common/hobject_fmt.h	2023-10-26 01:46:16.000000000 +0200
+++ ceph-17.2.7.mod/src/common/hobject_fmt.h	2024-03-03 07:44:04.994865841 +0100
@@ -9,6 +9,7 @@
 #include <fmt/ranges.h>
 
 #include "common/hobject.h"
+#include "include/object_fmt.h"
 #include "include/types_fmt.h"
 #include "msg/msg_fmt.h"
 
--- ceph-17.2.7/src/common/LogEntry.h	2023-10-26 01:46:16.000000000 +0200
+++ ceph-17.2.7.mod/src/common/LogEntry.h	2024-03-02 07:42:35.321554400 +0100
@@ -18,6 +18,7 @@
 #include <fmt/format.h>
 
 #include "include/utime.h"
+#include "include/utime_fmt.h"
 #include "msg/msg_fmt.h"
 #include "msg/msg_types.h"
 #include "common/entity_name.h"
@@ -194,6 +195,9 @@
              << e.channel << " " << e.prio << " " << e.msg;
 }
 
+template <>
+struct fmt::formatter<clog_type> : ostream_formatter {};
+
 template <> struct fmt::formatter<EntityName> : fmt::formatter<std::string_view> {
   template <typename FormatContext>
   auto format(const EntityName& e, FormatContext& ctx) {
--- ceph-17.2.7/src/include/types_fmt.h	2023-10-26 01:46:16.000000000 +0200
+++ ceph-17.2.7.mod/src/include/types_fmt.h	2024-03-02 09:54:14.238851992 +0100
@@ -6,6 +6,7 @@
  */
 
 #include <fmt/format.h>
+#include <fmt/ostream.h>
 
 #include <string_view>
 
@@ -26,3 +27,9 @@
     return fmt::format_to(ctx.out(), "}}");
   }
 };
+
+template <typename T>
+struct fmt::formatter<ceph_le<T>> : ostream_formatter {};
+
+template <>
+struct fmt::formatter<shard_id_t> : ostream_formatter {};
--- ceph-17.2.7/src/msg/async/frames_v2.cc	2023-10-26 01:46:16.000000000 +0200
+++ ceph-17.2.7.mod/src/msg/async/frames_v2.cc	2024-03-01 19:04:33.315590782 +0100
@@ -13,6 +13,7 @@
  */
 
 #include "frames_v2.h"
+#include "include/types_fmt.h"
 
 #include <ostream>
 
--- ceph-17.2.7/src/tools/neorados.cc	2024-03-03 19:54:51.414457588 +0100
+++ ceph-17.2.7.mod/src/tools/neorados.cc	2024-03-03 15:18:02.793213584 +0100
@@ -143,7 +143,7 @@
     throw bs::system_error(ec,
 			   fmt::format(
 			     "when creating object '{}' in pool '{}'",
-			     obj, pname));
+			     fmt::streamed(obj), pname));
 }
 
 inline constexpr std::size_t io_size = 4 << 20;
@@ -179,7 +179,7 @@
     if (ec)
       throw bs::system_error(ec, fmt::format(
 			       "when writing object '{}' in pool '{}'",
-			       obj, pname));
+			       fmt::streamed(obj), pname));
   }
 }
 
@@ -200,7 +200,7 @@
       throw bs::system_error(
 	ec,
 	fmt::format("when getting length of object '{}' in pool '{}'",
-		    obj, pname));
+		    fmt::streamed(obj), pname));
   }
 
   std::size_t off = 0;
@@ -213,7 +213,7 @@
       throw bs::system_error(
 	ec,
 	fmt::format("when reading from object '{}' in pool '{}'",
-		    obj, pool));
+		    fmt::streamed(obj), pool));
 
     off += bl.length();
     bl.write_stream(std::cout);
@@ -234,7 +234,7 @@
   if (ec)
     throw bs::system_error(ec, fmt::format(
 			     "when removing object '{}' in pool '{}'",
-			     obj, pname));
+			     fmt::streamed(obj), pname));
 }
 
 static constexpr auto version = std::make_tuple(0ul, 0ul, 1ul);
